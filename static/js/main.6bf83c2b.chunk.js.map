{"version":3,"sources":["Navbar/styles.tsx","Context/AppContext.tsx","Navbar/Menu.tsx","Navbar/index.tsx","Settings/styles.tsx","Settings/Stroke.tsx","helpers.tsx","Settings/StrokeColor.tsx","Settings/Grid.tsx","Settings/Options.tsx","Settings/StrokeWeight.tsx","Settings/Sections.tsx","Settings/index.tsx","CanvasRenderer/styles.tsx","CanvasRenderer/index.tsx","GridHelper/styles.tsx","GridHelper/index.tsx","Context/AppProvider.tsx","DrawingMode/styles.tsx","DrawingMode/index.tsx","styles.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavContain","styled","div","MenuContain","Title","ThreeContext","React","createContext","Menu","AppContext","Consumer","context","onClick","displayDrawingMode","xmlns","viewBox","fill","showDrawingMode","d","Navbar","SettingsContain","PropContain","PropTitle","label","SelectBox","select","ColorPicker","input","ColorPickerOverlay","props","background","color","Switch","Button","button","disabled","content","length","WeightsCon","WeightButton","active","radius","RangeStyle","RangeValue","RangeContain","Stroke","htmlFor","id","value","settings","stroke","onChange","e","handleSettings","target","midPointDiff","x1","y1","activeBlock","x","y","distanceTwoPts","x2","y2","a","b","Math","sqrt","sections","blockx","floor","blocky","activeHex","width","height","nearest","offset","TWOPI","PI","hexToRgb","hex","result","exec","r","parseInt","g","getTextColor","rgb","check","ModesData","name","title","image","StrokeColor","keyValue","type","Grid","checked","showGrid","Options","state","drawState","canvas","document","getElementById","ctx","clearCanvas","clearData","getContext","restore","setTransform","clearRect","setState","downloadImage","offScreenCanvas","createElement","offctx","fillStyle","fillRect","drawImage","img","toDataURL","link","download","href","click","remove","undoCanvas","data","len","putImageData","redoCanvas","prevProps","this","reCalData","isUndo","isRedo","aria-label","style","Component","StrokeWeight","strokeWeight","Sections","min","max","step","Settings","mode","isSections","CanvasContain","CanvasOverlay","Background","CanvasRenderer","isDrawing","canvasRender","points","squaresections","setRenderer","window","innerWidth","innerHeight","lineJoin","lineCap","setModeTranformation","resetRenderer","translate","handleMouseMove","preventDefault","persist","handleDrawingMode","clientX","clientY","handleMouseDown","selectNearestReferencePoint","pushPoints","handleTouchMove","touches","handleTouchDown","handleMouseLeave","updateData","getImageData","angle","handleStrokeType","scale","i","rotate","h","w","temp3","temp","strokeColor","lineWidth","strokeStyle","dx","dy","dLimit","handleStrokeWeight","beginPath","moveTo","lineTo","console","log","newactiveSection","push","psk","drawSquare","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","defaultProps","Container","HorizontalLine","top","VerticalLine","ReferencePoint","left","Diagonal","Diagonal2","RotateLine","Index","renderGrid","grid","mirrorGrid","rotationalGrid","squareGrid","hexagonGrid","triangleGrid","secs","key","vert","horz","refs","diag","temp2","AppProvider","children","Provider","show","OptionContain","OptionImg","OptionTitle","DrawingMode","ModesList","map","src","alt","AppContain","App","drawingMode","option","imgData","newData","slice","GridHelper","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6bf83c2b.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const NavContain = styled.div`\n    position: relative;\n    width: 100%;\n    height: 50px;\n    border-bottom: 1px solid #f1f1f1;\n    display: flex;\n    justify-content:space-between;\n    padding: 9px;\n`\n\nexport const MenuContain = styled.div`\n    position: relative;\n    width: 27px;\n    height: 27px;\n    margin-top: 2px;\n\n`\n\nexport const Title = styled.div`\n    font-weight: 900;\n    margin-top: 5px;\n    user-select: none;\n    font-size: 19px;\n    -webkit-text-stroke-width: 1px;\n    -webkit-text-stroke-color: #282828;\n    color: #282828;\n    -webkit-letter-spacing: 5px;\n    -moz-letter-spacing: 5px;\n    -ms-letter-spacing: 5px;\n    letter-spacing: 5px;\n\n`","import React from 'react';\ninterface ContextType {\n    settings: {\n        stroke: string,\n        strokeColor: string,\n        background: string,\n        showGrid: boolean,\n        sections: number\n      },    \n    handleSettings: Function,\n    displayDrawingMode: Function\n  }\nconst ThreeContext = React.createContext<Partial<ContextType>>({});\n\nexport default ThreeContext;\n","import React from 'react';\nimport { MenuContain } from './styles';\nimport AppContext from '../Context/AppContext';\ntype ContextType = {\n  settings: {\n    stroke: String,\n  },\n  handleSettings: Function\n}\n\nconst Menu: React.FC = ()=>{\n    return (\n      <AppContext.Consumer>\n        {(context: any) =>\n          <MenuContain onClick={context.displayDrawingMode}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill={context.showDrawingMode?'#4f73f9':'#000'} d=\"M432 176H80c-8.8 0-16-7.2-16-16s7.2-16 16-16h352c8.8 0 16 7.2 16 16s-7.2 16-16 16zM432 272H80c-8.8 0-16-7.2-16-16s7.2-16 16-16h352c8.8 0 16 7.2 16 16s-7.2 16-16 16zM432 368H80c-8.8 0-16-7.2-16-16s7.2-16 16-16h352c8.8 0 16 7.2 16 16s-7.2 16-16 16z\" /></svg>\n          </MenuContain>\n        }\n      </AppContext.Consumer>\n    )\n}\n\n\nexport default Menu;","import React from 'react';\nimport { NavContain, Title } from './styles';\nimport Menu from './Menu';\n\n\n\nconst Navbar : React.FC = ()=>{\n  return(\n    <NavContain>\n      <Menu />\n      <Title>CALEIDO</Title>\n    </NavContain>\n\n  )\n}\n\nexport default Navbar;","import styled from 'styled-components'\n\nexport const SettingsContain = styled.div`\n    position: relative;\n    width: 250px;\n    height: 100%;\n    background:#ffffff;\n    border-left: 1px solid #f1f1f1;\n`\n\nexport const PropContain = styled.div`\n    position: relative;\n    width: 250px;\n    height: 50px;\n    display: flex;\n    padding-top: 13px;\n    padding-left: 5px;\n    padding-right: 5px;\n    justify-content: space-between;\n    border-bottom: 1px solid #f1f1f1;\n`\n\nexport const PropTitle = styled.label`\n    font-weight: 700;\n    user-select: none;\n    color: #535353;\n    margin-top: 4px;\n    font-size: 12px;\n\n`\n\nexport const SelectBox = styled.select`\n    margin-right: 2px;\n    width: 141px;\n    border: 1px solid #d1d1d1;\n    color: #5670ff;\n    outline: 0;\n    height: 26px;\n    border-radius: 2px;\n    line-height: 10px;\n    font-size: 10px;\n`\n\nexport const ColorPicker = styled.input`\n    width: 141px;\n    height: 26px;\n    border: 1px solid #d1d1d1;\n    border-radius: 4px;\n    position: relative;\n    margin-right: 2px;\n    z-index:2;\n    opacity:0;\n    cursor: pointer;\n`\nexport const ColorPickerOverlay = styled.div`\n    width: 141px;\n    position: absolute;\n    height: 26px;\n    border: 1px solid #d1d1d1;\n    border-radius: 4px;\n    z-index:1;\n    top: 14px;\n    font-weight: 600;\n    font-size: 12px;\n    padding-top: 4px;\n    padding-left: 9px;\n    background:${(props:{background:string,color:string})=>props.background};\n    color: ${(props)=>props.color};\n`\n\n\n\nexport const Switch = styled.label`\n  position: relative;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n    i {\n    position: relative;\n    display: inline-block;\n    margin-right: 0.5rem;\n    width: 44px;\n    height: 24px;\n    background-color: #d1d1d1;\n    border-radius: 23px;\n    vertical-align: text-bottom;\n    transition: all 0.3s linear;\n  }\n  i::before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    width: 42px;\n    height: 22px;\n    background-color: #d1d1d1;\n    border-radius: 12px;\n    transform: translate3d(2px, 2px, 0) scale3d(1, 1, 1);\n    transition: all 0.25s linear;\n  }\n  i::after {\n    content: \"\";\n    position: absolute;\n    left: -1px;\n    width: 20px;\n    height: 20px;\n    background-color: #ececec;\n    border-radius: 12px;\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24);\n    transform: translate3d(2px, 2px, 0);\n    transition: all 0.2s ease-in-out;\n  }\n  :active i::after {\n    width: 28px;\n    transform: translate3d(2px, 2px, 0);\n  }\n  :active input:checked + i::after {\n    transform: translate3d(16px, 2px, 0);\n  }\n  input {\n    position: absolute;\n    opacity: 0;\n    pointer-events: none;\n  }\n  input:checked + i {\n    background-color: #4f74f9;\n  }\n  input:checked + i::before {\n    transform: translate3d(18px, 2px, 0) scale3d(0, 0, 0);\n  }\n  input:checked + i::after {\n    transform: translate3d(22px, 2px, 0);\n  }\n`;\n\nexport const Button = styled.button`\n    width: 45px;\n    height: 24px;\n    border: 1px solid #d2d2d2;\n    border-radius: 4px;\n    border: none;\n    box-shadow: inset 0 0 1px #000;\n    background:${(props:{background:string, disabled:boolean,content:string})=>props.background};\n    cursor:${(props)=>props.disabled?'not-allowed':'pointer'};\n    &:focus{\n      outline: none;\n    }\n    &::before {\n      content: '${(props)=>`${props.content}`}';\n      color: #fff;\n      position: absolute;\n      background-color: #000;\n      width: auto;\n      height: 19px;\n      padding: 3px 7px 1px 7px;\n      margin: -30px 0px 0px ${(props)=>`-${props.content.length}%`};\n      border-radius: 4px;\n      display:none;\n      box-shadow: 0px 0px 12px -5px rgba(0,0,0,0.75);\n    }\n    &:hover{\n      &::before {\n        display:initial;\n      }\n    }\n\n\n\n`\nexport const WeightsCon = styled.div`\n    width: 141px;\n    height: 26px;\n    border: 1px solid #d1d1d1;\n    border-right: none;\n    border-radius: 4px;\n    margin-right: 2px;\n    display:flex;\n    overflow:hidden;\n\n`\n\nexport const WeightButton = styled.button`\n    width: 35px;\n    height: 26px;\n    border:none;\n    border-right: 1px solid #d1d1d1;\n    background-color: ${(props:{radius:number,active:boolean})=>props.active?'#4f73f9':'#fff'};\n    cursor: pointer;\n    transition: 0.3s;\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      background-color: ${(props)=>props.active?'#fff':'#000'};\n      width: ${(props)=>props.radius + 'px'};\n      height: ${(props)=>props.radius + 'px'};\n      margin-left:  ${(props)=>-props.radius/2 + 'px'};\n      margin-top:  ${(props)=>-(props.radius /2)-1+ 'px'};\n      border-radius:50%;\n    }\n\n    &:focus{\n      outline: none;\n    }\n\n`\n\nexport const RangeStyle = styled.input`\n  -webkit-appearance: none;\n  background-color: #4f74f9;\n  width: 90px;\n  float: right;\n  height: 4px;\n  margin-top: 10px;\n  border-radius: 13px;\n  margin-right: 7px;\n  outline: 0;\n  &:focus{\n      outline: none;\n    }\n  ::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    background-color: #ffffff;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    cursor: pointer;\n    box-shadow: 0px 0px 7px -2px rgba(0, 0, 0, 1);\n    transition: 0.3s ease-in-out;\n  }\n  ::-webkit-slider-thumb:active {\n    transform: scale(1.3);\n  }\n`;\n\n\nexport const RangeValue = styled.div`\n  width: 35px;\n  height: 26px;\n  border: 1px solid #d2d2d2;\n  border-radius: 4px;\n  font-size: 12px;\n  text-align: center;\n  padding-top: 3px;\n  color: #4f74f9;\n  font-weight: 500;\n\n`\n\nexport const RangeContain = styled.div`\n  display:flex;\n  width: 141px;\n  flex-direction: row;\n  justify-content: space-between;\n\n`\n\n","import React from 'react';\nimport { SelectBox, PropContain, PropTitle } from './styles';\nimport AppContext from '../Context/AppContext';\n\ninterface ContextType {\n  settings: {\n      stroke: string,\n      strokeColor: string,\n      background: string,\n      showGrid: boolean,\n      sections: number\n    },    \n  handleSettings: Function,\n  displayDrawingMode: Function\n}\nconst Stroke : React.FC = () => {\n    return (\n      <AppContext.Consumer>\n        {(context: any) => (\n            <PropContain>\n              <PropTitle htmlFor=\"stroke\">Stroke</PropTitle>\n                <SelectBox id='stroke' value={context.settings.stroke} onChange={(e) => { context.handleSettings('stroke', e.target.value) }}>\n                  <option value='Line'>Line</option>\n                  <option value='Near Point'>Near Point</option>\n                </SelectBox>\n            </PropContain>\n          )\n        }\n      </AppContext.Consumer>\n    )\n  }\n\n  export default Stroke;\n\n","export const midPointDiff = (x1: number, y1: number, activeBlock: {x:number,y:number} ) => {\n  return {\n    x: x1 - activeBlock.x,\n    y: y1 - activeBlock.y,\n  }\n}\n\nexport const distanceTwoPts = (x1: number, y1: number, x2: number, y2: number)=>{\n  const a = x1 - x2;\n  const b = y1 - y2;\n  const dist = Math.sqrt( a*a + b*b );\n  return dist\n}\n\n\nexport const activeBlock = (x: number, y: number, sections: number) => {\n  let blockx: number = Math.floor(x / sections)\n  let blocky: number = Math.floor(y / sections)\n  if (blockx % 2 === 0) {\n    blockx += 1\n  }\n  if (blocky % 2 === 0) {\n    blocky += 1\n  }\n\n  return {\n    x: blockx,\n    y: blocky\n  }\n}\n\nexport const activeHex = (x1: number, y1: number, sections: number, width: number, height: number) => {\n  const side = 130;\n  const Height = 112.5;\n  let blocky: number = Math.floor(y1 / Height)  \n  let nearest = {x:0,y:0};\n  let offset = 3*side - side/2\n    offset = !(blocky%2)? 3*side - side/2: side\n    for(let y=blocky;y<=blocky+1;y++){\n      for(let x = offset;x<width+offset;x+=3*side){\n        if(nearest){\n          let checknew = distanceTwoPts(x,y*Height,x1,y1)\n          let checkold = distanceTwoPts(nearest.x,nearest.y,x1,y1)\n          if(checknew<checkold){            \n            nearest={x:x,y:y*Height}\n          }\n        }else{\n          nearest={x:x,y:y*Height}\n        }\n      }\n      offset = !(blocky%2)? side :  3*side - side/2\n    }    \n  return nearest\n}\n\nexport const TWOPI = 2 * Math.PI\n\nexport const hexToRgb = (hex: string) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : { r: 0, g: 0, b: 0 };\n}\n\nexport const getTextColor = (hex:string='#000000') => {\n  // check calculates Luminance\n  let rgb = hexToRgb(hex)\n  const check = 1 - (0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b) / 255;\n  return check < 0.5 ? 'black' : 'white';\n}\n\nexport const ModesData = [\n  {\n    name: 'Mirror',\n    title: 'Mirror',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/mirror.jpg'\n    \n\n  },\n  {\n    name: 'Rotation',\n    title: 'Rotation',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/rotation.jpg'\n\n  },\n  {\n    name: 'Kaliedo',\n    title: 'Kaliedo',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/kaliedo.jpg'\n\n  },\n  {\n    name: 'SquareRotation',\n    title: 'Square Rotation',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/squarerotation.jpg'\n\n  },\n  {\n    name: 'SquareKaliedo',\n    title: 'Square Kaliedo',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/squarekaliedo.jpg'\n\n\n  },\n  {\n    name: 'Hexagon',\n    title: 'Hexagon',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/hexagon.jpg'\n\n  },\n  {\n    name: 'HexagonRotation',\n    title: 'Hexagon Rotation',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/hexagonrotation.jpg'\n\n  },\n  {\n    name: 'HexagonKaliedo',\n    title: 'Hexagon Kaliedo',\n    image: 'https://raw.githubusercontent.com/pizza3/asset/master/hexagonkaliedo.jpg'\n  }\n]\n","import React from 'react';\nimport { PropContain, PropTitle, ColorPicker, ColorPickerOverlay } from './styles';\nimport AppContext from '../Context/AppContext';\nimport { getTextColor } from '../helpers'\n\nconst StrokeColor : React.FC<{ title: string, keyValue:string }> = ({title, keyValue})=> {\n    return (\n      <AppContext.Consumer>\n        {(context: any) => {\n          const color = context.settings[keyValue]\n          return (\n            <PropContain>\n              <PropTitle htmlFor={keyValue}>{title}</PropTitle>\n              <div>\n                <ColorPicker id={keyValue} type='color' value={color} onChange={(e) => { context.handleSettings(keyValue, e.target.value) }} />\n                <ColorPickerOverlay background={color} color={getTextColor(color)}>{color}</ColorPickerOverlay>\n              </div>\n            </PropContain>\n          )\n        }}\n      </AppContext.Consumer>\n\n    )\n}\n\nexport default StrokeColor;","import React from 'react';\nimport { PropContain, PropTitle, Switch } from './styles';\nimport AppContext from '../Context/AppContext';\n\ntype ContextType = {\n  settings: {\n    showGrid: boolean,\n  },\n  handleSettings: Function\n}\nconst Grid: React.FC = () => {\n  return (\n    <AppContext.Consumer>\n      {(context: any) => {\n        return (\n          <PropContain>\n            <PropTitle htmlFor=\"grid\">Grid</PropTitle>\n            <Switch>\n              <input\n                id=\"grid\"\n                type=\"checkbox\"\n                checked={context.settings.showGrid}\n                onChange={(e) => { context.handleSettings('showGrid', e.target.checked) }}\n              />\n              <i />\n            </Switch>\n          </PropContain>\n        )\n      }}\n    </AppContext.Consumer>\n  )\n}\n\n\n\nexport default Grid","import React, { Component } from 'react';\nimport { PropContain, Button } from './styles';\n\ntype Props = {\n  data: [] | ImageData[],\n  settings: {\n    stroke: string,\n    strokeColor: string,\n    background: string,\n    showGrid: boolean,\n    sections: number\n  },\n  reCalData: Function,\n  clearData: Function,\n}\n\ntype States = {\n  drawState: number\n}\nexport default class Options extends Component<Props, States>{\n  state: States = {\n    drawState: 0\n  }\n  canvas: any = document.getElementById('canvasRender');\n  ctx: any = null;\n  width: number = 0;\n  height: number = 0;\n\n\n  componentDidUpdate(prevProps: Props) {\n    const { data } = this.props\n    const { drawState } = this.state;\n    if (data.length !== prevProps.data.length) {\n      if (drawState !== 0) {\n        this.setState({\n          drawState: 0\n        })\n        this.props.reCalData(drawState)\n      }\n    }\n  }\n\n\n  clearCanvas = (clearData: boolean = false) => {\n    this.canvas = document.getElementById('canvasRender')\n    this.ctx = this.canvas.getContext('2d')\n    this.ctx.restore();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    if (clearData) {\n      this.props.clearData()\n      this.setState({\n        drawState: 0\n      })\n    }\n  }\n\n  downloadImage = () => {\n    const { settings } = this.props\n    const background = settings.background;\n    this.canvas = document.getElementById('canvasRender')\n    this.ctx = this.canvas.getContext('2d')\n    // set a offscreencanvas\n    let offScreenCanvas: any = document.createElement('canvas');\n    offScreenCanvas.width = this.canvas.width;\n    offScreenCanvas.height = this.canvas.height;\n    let offctx: any = offScreenCanvas.getContext('2d');\n    // apply the background \n    offctx.fillStyle = background;\n    offctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    // apply the image drawn\n    offctx.drawImage(this.canvas, 0, 0);\n    // get the final image from offScreenCanvas\n    const img: string = offScreenCanvas.toDataURL(\"image/png\");\n    // create a anchor el. for downloading image ref.\n    let link = document.createElement('a');\n    link.download = 'caleido.png';\n    link.href = img\n    // downloads the final image\n    link.click();  \n    // removes both offScreenCanvas & link(anchor)\n    link.remove();\n    offScreenCanvas.remove();\n  }\n\n\n  undoCanvas = () => {\n    const { data } = this.props\n    const { drawState } = this.state;\n    const len = data.length - 1\n    this.clearCanvas()\n    this.setState({\n      drawState: drawState + 1\n    }, () => {\n      let img: ImageData = data[len - (this.state.drawState)]\n      if (img) {\n        this.ctx.putImageData(img, 0, 0);\n      } else {\n        this.clearCanvas()\n      }\n    })\n  }\n\n  redoCanvas = () => {\n    const { data } = this.props\n    const { drawState } = this.state;\n    const len: number = data.length - 1\n    this.clearCanvas()\n    this.setState({\n      drawState: drawState - 1\n    }, () => {\n      let img: ImageData = data[len - (this.state.drawState)]\n      if (img) {\n        this.ctx.putImageData(img, 0, 0);\n      } else {\n        this.clearCanvas()\n      }\n    })\n\n  }\n\n  render() {\n    const { data } = this.props\n    const { drawState } = this.state;\n    const isUndo: boolean = !(data.length > 0) || data.length === drawState\n    const isRedo: boolean = 0 === drawState\n    return (\n      <PropContain>\n        <Button background='#ff5a5a' disabled={false} content={'Clear'} aria-label=\"Clear\" onClick={() => { this.clearCanvas(true) }}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" style={{ width: '19px' }}><path fill='#ffffff' d=\"M133.1 128l23.6 290.7c0 16.2 13.1 29.3 29.3 29.3h141c16.2 0 29.3-13.1 29.3-29.3L379.6 128H133.1zm61.6 265L188 160h18.5l6.9 233h-18.7zm70.3 0h-18V160h18v233zm52.3 0h-18.6l6.8-233H324l-6.7 233zM364 92h-36l-26.3-23c-3.7-3.2-8.4-5-13.2-5h-64.8c-4.9 0-9.7 1.8-13.4 5L184 92h-36c-17.6 0-30 8.4-30 26h276c0-17.6-12.4-26-30-26z\" /></svg>\n        </Button>\n        <Button background='#4f73f9' disabled={false} content={'Download Image'} aria-label=\"Download Image\" onClick={this.downloadImage}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" style={{ width: '19px' }}><path fill='#ffffff' d=\"M403.002 217.001C388.998 148.002 328.998 96 256 96c-57.998 0-107.998 32.998-132.998 81.001C63.002 183.002 16 233.998 16 296c0 65.996 53.999 120 120 120h260c55 0 100-45 100-100 0-52.998-40.996-96.001-92.998-98.999zM224 268v-76h64v76h68L256 368 156 268h68z\" /></svg>\n        </Button>\n        <Button background={isUndo ? '#d8d8d8' : '#fff'} disabled={isUndo} content={'Undo'} aria-label=\"Undo\" onClick={this.undoCanvas}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" style={{ width: '19px' }}><path fill={isUndo ? '#737373' : '#4f73f9'} d=\"M70.5 265.4l59.6-59.4c2.6-2.6 6.1-4.1 9.9-4.1 3.7 0 7.3 1.4 9.9 4.1 2.6 2.6 4.1 6.1 4.1 9.9s-1.5 7.3-4.1 9.9l-.1.1-41.1 40.1H370c13.2 0 25.8-5.2 35.3-14.7 9.5-9.4 14.7-21.9 14.7-35.3v-48c0-7.7 6.3-14 14-14s14 6.3 14 14v48c0 20.8-8.1 40.3-22.9 55.1-14.8 14.8-34.3 22.9-55.1 22.9H108.3l39.6 40.2c2.6 2.6 4.1 6.1 4.1 9.9 0 3.7-1.4 7.3-4.1 9.9l-.1.1c-2.7 2.5-6.2 3.9-9.8 3.9-3.9 0-7.3-1.4-9.9-4.1l-57.6-57.4c-4.2-4.2-6.5-9.8-6.5-15.7 0-5.8 2.3-11.3 6.5-15.4z\" /></svg>\n        </Button>\n        <Button background={isRedo ? '#d8d8d8' : '#fff'} disabled={isRedo} content={'Redo'} aria-label=\"Redo\" onClick={this.redoCanvas}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" style={{ width: '19px' }}><path fill={isRedo ? '#737373' : '#4f73f9'} d=\"M441.5 265.4L381.9 206c-2.6-2.6-6.1-4.1-9.9-4.1-3.7 0-7.3 1.4-9.9 4.1-2.6 2.6-4.1 6.1-4.1 9.9s1.5 7.3 4.1 9.9l.1.1 41.1 40.1H142c-13.2 0-25.8-5.2-35.3-14.7-9.5-9.5-14.7-22-14.7-35.3v-48c0-7.7-6.3-14-14-14s-14 6.3-14 14v48c0 20.8 8.1 40.3 22.9 55.1 14.8 14.8 34.3 22.9 55.1 22.9h261.7L364 334.2c-2.6 2.6-4.1 6.1-4.1 9.9 0 3.7 1.4 7.3 4.1 9.9l.1.1c2.7 2.5 6.2 3.9 9.8 3.9 3.9 0 7.3-1.4 9.9-4.1l57.6-57.4c4.2-4.2 6.5-9.8 6.5-15.7.1-5.8-2.2-11.3-6.4-15.4z\" /></svg>\n        </Button>\n      </PropContain>\n    )\n  }\n}\n\n","import React from 'react';\nimport { PropContain, PropTitle, WeightsCon, WeightButton } from './styles';\n\nimport AppContext from '../Context/AppContext';\n\n\nconst StrokeWeight : React.FC = () => {\n  return (\n    <AppContext.Consumer>\n      {(context: any) => {\n        return (\n          <PropContain>\n            <PropTitle>Stroke Weight</PropTitle>\n            <WeightsCon>\n              <WeightButton aria-label=\"Stroke Weight 1\" radius={5} active={context.settings.strokeWeight===0} onClick={()=>{context.handleSettings('strokeWeight',0)}}/>\n              <WeightButton aria-label=\"Stroke Weight 2\" radius={7} active={context.settings.strokeWeight===1} onClick={()=>{context.handleSettings('strokeWeight',1)}}/>\n              <WeightButton aria-label=\"Stroke Weight 3\" radius={9} active={context.settings.strokeWeight===2} onClick={()=>{context.handleSettings('strokeWeight',2)}}/>\n              <WeightButton aria-label=\"Stroke Weight 4\" radius={11} active={context.settings.strokeWeight===3} onClick={()=>{context.handleSettings('strokeWeight',3)}}/>\n            </WeightsCon>\n          </PropContain>\n        )\n      }}\n    </AppContext.Consumer>\n  )\n}\n\nexport default StrokeWeight\n","import React from 'react';\nimport { PropContain, PropTitle, RangeStyle, RangeValue, RangeContain } from './styles';\nimport AppContext from '../Context/AppContext';\n\ntype ContextType = {\n  settings: {\n    showGrid: boolean,\n  },\n  handleSettings: Function\n}\nconst Sections : React.FC = () => {\n    return (\n      <AppContext.Consumer>\n        {(context: any) => {\n          return (\n            <PropContain>\n              <PropTitle htmlFor=\"sections\">Sections</PropTitle>\n              <RangeContain>\n                  <RangeValue>{context.settings.sections}</RangeValue>\n                  <RangeStyle\n                    id=\"sections\"\n                    type=\"range\"\n                    min={3}\n                    max={20}\n                    step={1}\n                    value={context.settings.sections}\n                    onChange={(e) => { context.handleSettings('sections', e.target.value) }}\n                    />\n              </RangeContain>\n            </PropContain>\n          )\n        }}\n      </AppContext.Consumer>\n    )\n}\n\nexport default Sections;\n\n","import React, { Component } from 'react';\nimport { SettingsContain } from './styles'\nimport Stroke from './Stroke'\nimport StrokeColor from './StrokeColor'\nimport Grid from './Grid'\nimport Options from './Options'\nimport StrokeWeight from './StrokeWeight'\nimport Sections from './Sections'\n\n\ntype Props = {\n  data: []|ImageData[],\n    settings: {\n    stroke: string,\n    strokeColor: string,\n    background: string,\n    showGrid: boolean,\n    sections: number\n  },\n  reCalData:Function,\n  clearData: Function,\n  mode: string\n}\nexport default class Settings extends Component<Props> {\n  render() {\n    const {data, settings, reCalData, clearData, mode} = this.props\n    const isSections = mode==='Rotation'||mode==='Kaliedo'?<Sections/>:[]\n    return (\n      <SettingsContain>\n        <Options data={data} settings={settings} reCalData={reCalData} clearData={clearData}/>\n        <Stroke />\n        <StrokeColor title='Stroke Color' keyValue='strokeColor' />\n        <StrokeColor title='Background' keyValue='background' />\n        <Grid/>\n        <StrokeWeight />\n        {isSections}\n      </SettingsContain>\n    )\n  }\n}","import styled from 'styled-components'\n\nexport const CanvasContain = styled.canvas`\n    position: absolute;\n    cursor: crosshair;\n`\nexport const CanvasOverlay = styled.div`\n    width:calc(100% - 250px);\n    height: cala(100vh - 50px);\n    overflow:hidden;\n    position: relative;\n`\n\nexport const Background = styled.div`\n    position: absolute;\n    width:100%;\n    height: 100%;\n    z-index:-1;\n    background: ${(props)=>props.color};\n`","import React, { Component } from 'react';\nimport { CanvasContain, CanvasOverlay } from './styles';\nimport { midPointDiff, activeBlock, TWOPI, hexToRgb, activeHex } from '../helpers';\n\ntype States = {\n  isDrawing: boolean,\n}\n\ntype CoordinatePlane = {\n  x: number\n  y: number\n}\n\ntype Props = {\n  mode: string\n  stroke: string\n  strokeColor: string\n  sections: number\n  strokeWeight: number\n  updateData: Function,\n}\n\nexport default class CanvasRenderer extends Component<Props, States>{\n  state: States = {\n    isDrawing: false,\n  }\n\n  public static defaultProps = {\n    strokeColor: \"#000000\"\n  };\n\n\n  // Basic canvas variables .\n  canvasRender: any = document.getElementById('canvasRender');\n  ctx: any = null;\n  width: number = 0;\n  height: number = 0;\n\n  // Mouse interaction variables .\n  points: { x: number, y: number }[] = [];\n  squaresections: number = 130;\n  isDrawing: boolean = false\n  activeBlock: CoordinatePlane = { x: this.squaresections, y: this.squaresections }\n\n  componentDidMount() {\n    this.setRenderer()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { mode } = this.props;\n    if (mode !== prevProps.mode) {\n      this.setModeTranformation()\n    }\n  }\n\n  // sets canvas and ctx \n  setRenderer = () => {\n    this.canvasRender = document.getElementById('canvasRender');\n    this.ctx = this.canvasRender.getContext('2d');\n    this.canvasRender.width = this.width = window.innerWidth - 250;\n    this.canvasRender.height = this.height = window.innerHeight - 50;\n    this.ctx.lineJoin = this.ctx.lineCap = 'round';\n    this.setModeTranformation()\n  }\n\n  setModeTranformation = () => {\n    const { mode } = this.props;\n    this.points = []\n    switch (mode) {\n      case 'Rotation':\n        this.resetRenderer()\n        this.ctx.translate(this.width / 2, this.height / 2);\n        break;\n      case 'Kaliedo':\n        this.resetRenderer()\n        this.ctx.translate(this.width / 2, this.height / 2);\n        break;\n      default:\n        this.resetRenderer()\n        break;\n    }\n  }\n\n  // re renders canvas again on change in drawing mode\n  resetRenderer = () => {\n    // remove of any for of unnessecary tranformations and states\n    this.ctx.restore();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    // clear canvas\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  handleMouseMove = (e: React.MouseEvent) => {\n    e.preventDefault()\n    e.persist();\n    if (this.isDrawing) {\n      this.handleDrawingMode({ x: e.clientX, y: e.clientY - 50 })\n    }\n  }\n\n  handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.persist();\n    this.selectNearestReferencePoint({ x: e.clientX, y: e.clientY - 50 })\n    this.pushPoints({ x: e.clientX, y: e.clientY - 50 })\n    // this.pushPoints({ x: e.touches ? e.touches[0].clientX : e.clientX, y: e.touches ? e.touches[0].clientY -50: e.clientY- 50 })\n    this.isDrawing = true\n    // this.selectNearestReferencePoint({ x: e.touches ? e.touches[0].clientX : e.clientX, y: e.touches ? e.touches[0].clientY -50: e.clientY- 50 })\n\n  }\n\n  handleTouchMove = (e: React.TouchEvent) => {\n    e.persist();\n    if (this.isDrawing) {\n      this.handleDrawingMode({ x: e.touches[0].clientX, y: e.touches[0].clientY - 50 })\n    }\n  }\n\n  handleTouchDown = (e: React.TouchEvent) => {\n    e.persist();\n    this.selectNearestReferencePoint({ x: e.touches[0].clientX, y: e.touches[0].clientY - 50 })\n    this.pushPoints({ x: e.touches[0].clientX, y: e.touches[0].clientY - 50 })\n    // this.pushPoints({ x: e.touches ? e.touches[0].clientX : e.clientX, y: e.touches ? e.touches[0].clientY -50: e.clientY- 50 })\n    this.isDrawing = true\n    // this.selectNearestReferencePoint({ x: e.touches ? e.touches[0].clientX : e.clientX, y: e.touches ? e.touches[0].clientY -50: e.clientY- 50 })\n  }\n\n  handleMouseLeave = (e: React.MouseEvent | React.TouchEvent) => {\n    e.preventDefault()\n    const { updateData } = this.props\n    if (this.points.length > 1) {\n      var imgData = this.ctx.getImageData(0, 0, this.width, this.height);\n      updateData(imgData)\n    }\n    this.points = [];\n    this.isDrawing = false\n  }\n\n  handleDrawingMode = (e: CoordinatePlane) => {\n    const { mode, sections } = this.props;\n    const angle: number = TWOPI / sections\n    this.pushPoints({ x: e.x, y: e.y })\n    if (mode === 'Mirror') {\n      this.handleStrokeType()\n      // flip the render in order for mirror effect\n      this.ctx.translate(this.width, 0);\n      this.ctx.scale(-1, 1);\n      this.handleStrokeType()\n    } else if (mode === 'Kaliedo' || mode === 'Rotation') {\n      for (let i = 0; i < TWOPI; i += angle) {\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n        this.ctx.translate(this.width / 2, this.height / 2);\n        this.ctx.rotate(i);\n        this.handleStrokeType()\n      }\n    } else if (mode === 'SquareRotation' || mode === 'SquareKaliedo') {\n      for (let h = -this.squaresections; h <= this.height + this.squaresections; h += 2 * this.squaresections) {\n        for (let w = -this.squaresections; w <= this.width + this.squaresections; w += 2 * this.squaresections) {\n          for (let i = 0; i < TWOPI; i += TWOPI / 4) {\n            this.ctx.restore();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.translate(w, h);\n            this.ctx.rotate(i);\n            this.handleStrokeType()\n          }\n        }\n      }\n    } else if (mode === 'Hexagon') {\n      let temp3 = -1;\n      this.ctx.restore();\n      for (let y = -112.5; y <= this.height + 112.5; y += 112.5) {\n        const offset = !(temp3 % 2) ? -3 * 130 - 65 : 130;\n        for (let x = offset; x <= this.width + 3 * 130; x += 3 * 130) {\n          this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n          this.ctx.translate(x, y);\n          this.ctx.rotate(0);\n          this.handleStrokeType()\n        }\n        temp3++\n      }\n    } else if (mode === 'HexagonRotation' || mode === 'HexagonKaliedo') {\n      let temp = 0;\n      this.ctx.restore();\n      for (let y = 0; y <= this.height + 112.5; y += 112.5) {\n        const offset = !(temp % 2) ? -3 * 130 - 65 : 130;\n        for (let x = offset; x <= this.width + 3 * 130; x += 3 * 130) {\n          for (let i = 0; i <= TWOPI; i += TWOPI / 6) {\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.translate(x, y);\n            this.ctx.rotate(i);\n            this.handleStrokeType()\n          }\n        }\n        temp++\n      }\n    } else {\n      // as a default case the mirror will exec.\n      this.handleStrokeType()\n      this.ctx.translate(this.width, 0);\n      this.ctx.scale(-1, 1);\n      this.handleStrokeType()\n\n    }\n  }\n\n  handleStrokeType = (offset: number = 0) => {\n    // this.ctx.beginPath();\n    // this.ctx.moveTo(this.points[this.points.length - 2].x+offset, this.points[this.points.length - 2].y);\n    // this.ctx.lineTo(this.points[this.points.length - 1].x+offset, this.points[this.points.length - 1].y);\n    // this.ctx.stroke();\n    const { mode, stroke, strokeColor } = this.props;\n    const color: { r: number, g: number, b: number } = hexToRgb(strokeColor)\n    if (stroke === 'Near Point') {\n      this.ctx.lineWidth = 1;\n      this.ctx.strokeStyle = `rgba(${color.r},${color.g},${color.b},0.1)`;\n      for (let i = 0, len = this.points.length; i < len; i++) {\n        const dx: number = this.points[i].x + offset - (this.points[this.points.length - 1].x + offset);\n        const dy: number = this.points[i].y - this.points[this.points.length - 1].y;\n        const d: number = dx * dx + dy * dy;\n        const dLimit: number = this.handleStrokeWeight()\n        if (d < dLimit) {\n          this.ctx.beginPath();\n          this.ctx.moveTo(this.points[this.points.length - 1].x + offset + (dx * 0.2), this.points[this.points.length - 1].y + (dy * 0.2));\n          this.ctx.lineTo(this.points[i].x + offset - (dx * 0.2), this.points[i].y - (dy * 0.2));\n          this.ctx.stroke();\n          if (mode === 'Kaliedo' || mode === 'HexagonKaliedo' || mode === 'SquareKaliedo') {\n            this.ctx.beginPath();\n            this.ctx.moveTo(-this.points[this.points.length - 1].x + (-dx * 0.2), this.points[this.points.length - 1].y + (dy * 0.2));\n            this.ctx.lineTo(-this.points[i].x - (-dx * 0.2), this.points[i].y - (dy * 0.2));\n            this.ctx.stroke();\n          }\n        }\n      }\n    } else {\n      console.log(this.points);\n      // if(this.points[this.points.length - 2].x<0||this.points[this.points.length - 1].x<0)return\n      this.ctx.lineWidth = this.handleStrokeWeight();\n      this.ctx.strokeStyle = `rgba(${color.r},${color.g},${color.b},1)`;\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.points[this.points.length - 2].x, this.points[this.points.length - 2].y);\n      this.ctx.lineTo(this.points[this.points.length - 1].x, this.points[this.points.length - 1].y);\n      this.ctx.stroke();\n      if (mode === 'Kaliedo' || mode === 'HexagonKaliedo' || mode === 'SquareKaliedo') {\n        this.ctx.beginPath();\n        this.ctx.moveTo(-this.points[this.points.length - 2].x, this.points[this.points.length - 2].y);\n        this.ctx.lineTo(-this.points[this.points.length - 1].x, this.points[this.points.length - 1].y);\n        this.ctx.stroke();\n      }\n    }\n  }\n\n  handleStrokeWeight = () => {\n    const { strokeWeight, stroke } = this.props;\n    if (stroke === 'Near Point') {\n      if (strokeWeight === 0) {\n        return 250\n      } else if (strokeWeight === 1) {\n        return 500\n      } else if (strokeWeight === 2) {\n        return 750\n      } else {\n        return 1000\n      }\n    } else {\n      if (strokeWeight === 0) {\n        return 1\n      } else if (strokeWeight === 1) {\n        return 5\n      } else if (strokeWeight === 1) {\n        return 10\n      } else {\n        return 15\n      }\n    }\n\n  }\n\n  selectNearestReferencePoint = (e: CoordinatePlane) => {\n    const { mode } = this.props;\n    let newactiveSection = activeBlock(e.x, e.y, this.squaresections)\n    if (mode === 'HexagonRotation' || mode === 'HexagonKaliedo' || mode === 'Hexagon') {\n      newactiveSection = activeHex(e.x, e.y, this.squaresections, this.width, this.height)\n      this.activeBlock = {\n        x: newactiveSection.x,\n        y: newactiveSection.y\n      }\n    } else {\n      this.activeBlock = {\n        x: newactiveSection.x * this.squaresections,\n        y: newactiveSection.y * this.squaresections\n      }\n    }\n  }\n\n\n  pushPoints = (e: CoordinatePlane) => {\n    const { mode } = this.props;\n    if (mode === 'Rotation' || mode === 'Kaliedo') {\n      /**  giving an offset of width / 2 & height / 2 because\n       * canvas is translated by width / 2 & height / 2. */\n      this.points.push({ x: e.x - this.width / 2, y: e.y - this.height / 2 });\n    } else if (mode === 'SquareRotation' || mode === 'SquareKaliedo' || mode === 'HexagonRotation' || mode === 'HexagonKaliedo' || mode === 'Hexagon') {\n      /**  For the cases of SquareRotation,SquareKaliedo,HexagonRotation,HexagonKaliedo,Hexagon\n       *   the distance between mouse/touch and the reference point is taken and pushed into this.points,\n       *   this distance is basically normalised wrt 0,0.\n       */\n      const psk: { x: number, y: number } = midPointDiff(e.x, e.y, this.activeBlock)\n      this.points.push(psk)\n    } else {\n      this.points.push({ x: e.x, y: e.y });\n    }\n  }\n\n  drawSquare = (w: number, h: number, i: number) => {\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.translate(w, h);\n    this.ctx.rotate(i);\n    this.handleStrokeType()\n  }\n\n  render() {\n    return (\n      <CanvasOverlay>\n        <CanvasContain id='canvasRender' onMouseDown={this.handleMouseDown}  onMouseMove={this.handleMouseMove} onMouseUp={this.handleMouseLeave} onMouseLeave={this.handleMouseLeave} onTouchStart={this.handleTouchDown} onTouchMove={this.handleTouchMove} onTouchEnd={this.handleMouseLeave} ></CanvasContain>\n      </CanvasOverlay>\n    )\n  }\n}","import styled from 'styled-components'\n\n\nexport const Container = styled.div`\n    position: absolute;\n    width:100%;\n    height: 100%;\n    z-index:0;\n    overflow:hidden;\n`\n\nexport const HorizontalLine = styled.div`\n    width:100%;\n    position: absolute;\n    height: 1px;\n    background:#e7e7e7;\n    top:${(props:{top:number})=>props.top+'px'};\n`\n\nexport const VerticalLine = styled.div`\n    width:1px;\n    position: absolute;\n    height: 100%;\n    background:#e7e7e7;\n    left:${(props:{top:number})=>props.top+'px'};\n`\n\nexport const ReferencePoint = styled.div`\n    width: 8px;\n    position: absolute;\n    border-radius: 50%;\n    height: 8px;\n    background:#e7e7e7;\n    left:${(props:{left:number, top:number})=>props.left+'px'};\n    top:${(props)=>props.top+'px'};\n`\n\nexport const Diagonal = styled.div`\n    width: 367.7px;\n    height: 1px;\n    background:#e7e7e7;\n    position: absolute;\n    transform-origin: left;\n    transform: ${(props:{left:number, top:number, angle:number})=>`rotate(${props.angle}deg)`};\n    left:${(props)=>props.left+'px'};\n    top:${(props)=>props.top+'px'};\n\n`\n\nexport const Diagonal2 = styled.div`\n    width: 130px;\n    height: 1px;\n    background:#e7e7e7;\n    position: absolute;\n    transform-origin: left;\n    transform: ${(props:{left:number, top:number, angle:number})=>`rotate(${props.angle}deg)`};\n    left:${(props)=>props.left+'px'};\n    top:${(props)=>props.top+'px'};\n\n`\n\nexport const RotateLine =  styled.div`\n    width:1px;\n    position: absolute;\n    height: 100%;\n    background:#e7e7e7;\n    bottom: 50%;\n    left:${(props:{left:number,angle:number})=>props.left+'px'};\n    transform-origin: bottom;\n    transform: ${(props)=>`rotate(${props.angle}deg)`};\n`\n","import React, { Component } from 'react';\nimport { Container, VerticalLine, HorizontalLine, ReferencePoint, Diagonal, RotateLine, Diagonal2 } from './styles'\ntype Props = {\n  mode: string\n  sections: number\n}\n\nclass Index extends Component<Props>{\n  static defaultProps = {\n    mode: 'Mirror',\n    sections: 10\n  }\n  renderGrid = () => {\n    const { mode } = this.props\n    let grid: JSX.Element | JSX.Element[] | [] = [];\n    switch (mode) {\n      case 'Mirror':\n        grid = this.mirrorGrid()\n        break;\n      case 'Rotation':\n        grid = this.rotationalGrid()\n        break;\n      case 'Kaliedo':\n        grid = this.rotationalGrid()\n        break;\n      case 'SquareRotation':\n        grid = this.squareGrid()\n        break;\n      case 'SquareKaliedo':\n        grid = this.squareGrid()\n        break;\n      case 'Hexagon':\n        grid = this.hexagonGrid()\n        break;\n      case 'HexagonRotation':\n        grid = this.triangleGrid()\n        break;\n      case 'HexagonKaliedo':\n        grid = this.triangleGrid()\n        break;\n      default:\n        grid = this.mirrorGrid()\n        break;\n    }\n    return grid;\n  }\n\n  mirrorGrid = () => {\n    const width = window.innerWidth - 250\n    return (<VerticalLine top={width / 2} />)\n  }\n\n  rotationalGrid = () => {\n    const width = window.innerWidth - 250\n    const { sections } = this.props\n    let secs = []\n    for (let i = 0; i <= 360; i += 360 / sections) {\n      secs.push(<RotateLine key={'RotateLine' + i} left={width / 2} angle={i} />)\n    }\n    return secs\n  }\n\n\n  squareGrid = () => {\n    const { mode } = this.props\n    const width = window.innerWidth - 250\n    const height = window.innerHeight - 50\n\n    let vert = [], horz = [], refs = [], diag = [];\n\n    for (let i = 130; i <= height + 130; i += 130) {\n      vert.push(<HorizontalLine key={i + 'HorizontalLine'} top={i} />)\n    }\n\n    for (let i = 130; i <= width + 130; i += 130) {\n      horz.push(<VerticalLine key={i + 'VerticalLine'} top={i} />)\n    }\n\n    for (let y = 130; y <= height + 130; y += 2 * 130) {\n      for (let x = 130; x <= width + 2 * 130; x += 2 * 130) {\n        refs.push(<ReferencePoint key={`${y}${x}ReferencePoint`} top={y - 4} left={x - 4} />)\n        if (mode === 'SquareKaliedo') {\n          diag.push(<Diagonal angle={45} key={`${y}${x}Diagonal`} top={y - 130} left={x - 130} />)\n          diag.push(<Diagonal angle={135} key={`${y}${x}Diagonal2`} top={y - 130} left={x - 130} />)\n        }\n      }\n    }\n    return [...vert, ...horz, ...refs, ...diag]\n  }\n\n  triangleGrid = () => {\n    const width = window.innerWidth - 250\n    const height = window.innerHeight - 50\n\n    let vert = [], refs = [], diag = [];\n\n    for (let i = 112.5; i <= height + 112.5; i += 112.5) {\n      vert.push(<HorizontalLine key={i + 'HorizontalLine'} top={i} />)\n    }\n    let temp = 0;\n    for (let y = 0; y <= height + 112.5; y += 112.5) {\n      const offset = !(temp % 2) ? 65 : 0;\n      for (let x = 0; x <= width + 130; x += 130) {\n        diag.push(<Diagonal2 angle={60} key={`${x}${y}Diagonal`} top={y} left={x - offset} />)\n        diag.push(<Diagonal2 angle={120} key={`${x}${y}Diagonal23`} top={y} left={x - offset} />)\n      }\n      temp++;\n    }\n    let temp2 = 0;\n    for (let y = 0; y <= height + 112.5; y += 112.5) {\n      const offset = !(temp2 % 2) ? 3 * 130 - 65 : 130;\n      for (let x = 0; x <= width + 130; x += 3 * 130) {\n        refs.push(<ReferencePoint key={`${y}${x}ReferencePoint`} top={y - 4} left={x + offset - 4}></ReferencePoint>)\n      }\n      temp2++;\n    }\n    return [...vert, ...diag, ...refs]\n  }\n\n  // used only for the case of hexagon\n  hexagonGrid = () => {\n    const width = window.innerWidth - 250\n    const height = window.innerHeight - 50\n    let diag = [];\n    let temp = 0;\n    for (let y = 0; y <= height + 112.5; y += 112.5) {\n      const offset = !(temp % 2) ? 65 : 0;\n      for (let x = 130; x <= width + 130; x += 3*130) {\n        if(offset){\n          diag.push(<Diagonal2 angle={60} key={`${x}${y}Diagonal`} top={y} left={130+x - offset} />)\n          diag.push(<Diagonal2 angle={120} key={`${x}${y}Diagonal23`} top={y} left={x - offset} />)\n          diag.push(<Diagonal2 angle={0} key={`${x}${y}Diagonal24`} top={y} left={x - offset} />)  \n        }else{\n          diag.push(<Diagonal2 angle={60} key={`${x}${y}Diagonal`} top={y} left={x - offset-130} />)\n          diag.push(<Diagonal2 angle={120} key={`${x}${y}Diagonal23`} top={y} left={130 + x - offset} />)\n          diag.push(<Diagonal2 angle={0} key={`${x}${y}Diagonal24`} top={y} left={130 + x - offset} />)  \n        }\n      }\n      temp++;\n    }\n    return diag\n  }\n\n\n  render() {\n    return (\n      <Container>\n        {this.renderGrid()}\n      </Container>\n    )\n  }\n\n}\n\nexport default Index","import AppContext from './AppContext'\nimport React, {Component} from 'react'\n\ntype Props = {\n    value:{},\n    children: {}\n}\n\nclass AppProvider extends Component<Props> {\n    render() {\n      const {value, children} = this.props\n        return (\n            <AppContext.Provider value={value}>\n              {children}\n            </AppContext.Provider>\n        );\n    }\n}\n\nexport default AppProvider\n","import styled from 'styled-components'\n\n\nexport const Container = styled.div`\n    position: fixed;\n    width: 250px;\n    height: 100vh;\n    border-right: 1px solid #f1f1f1;\n    background: #fff;\n    user-select: none;\n    display: flex;\n    flex-direction: column;\n    -webkit-overflow-scrolling: touch;\n    overflow: scroll;\n    z-index: 1;\n    padding-bottom:50px;\n    transition: 0.3s;\n    transform: ${(props:{show:boolean})=>props.show?`translate(0px, 0px)`:`translate(-250px, 0px)`};\n`\n\nexport const OptionContain = styled.div`\n    position: relative;\n    width: 100%;\n    height:197px;\n    border-bottom: 1px solid #f1f1f1;\n    cursor: pointer;\n    padding: 4px;\n    color: #000;\n    background: #fff;\n    transition: 0.3s;\n    filter: grayscale(100%);\n\n    &:hover{\n        color: #4f73f9;\n        background: #000;\n        filter: grayscale(0%);\n\n    }\n`\n\nexport const OptionImg = styled.img`\n    width: 240px;\n    height: 160px;\n    user-select: none;\n\n`\n\nexport const OptionTitle = styled.div`\n    font-size: 22px;\n    font-weight: 900;\n    user-select: none;\n\n`\n\n","import React from 'react';\nimport { Container, OptionContain, OptionImg, OptionTitle } from './styles'\nimport { ModesData } from '../helpers'\n\nconst DrawingMode:React.FC<{handleDrawingMode:Function,show:boolean}> = ({handleDrawingMode, show})=>{\n  const ModesList = ModesData.map((data) => {\n    return (\n      <OptionContain key={data.name} onClick={() => { handleDrawingMode(data.name) }}>\n        <OptionImg src={data.image} alt={data.title} />\n        <OptionTitle>{data.title}</OptionTitle>\n      </OptionContain>\n    )\n  })\n  return(\n    <Container show={show}>\n      {ModesList}\n    </Container>\n  )\n}\n\nexport default DrawingMode","import styled from 'styled-components'\n\nexport const AppContain = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    height: calc(100vh - 50px);\n`\n","import React, { Component } from 'react';\nimport Navbar from './Navbar'\nimport Settings from './Settings'\nimport CanvasRenderer from './CanvasRenderer'\nimport { Background } from './CanvasRenderer/styles'\nimport GridHelper from './GridHelper'\nimport AppProvider from './Context/AppProvider'\nimport DrawingMode from './DrawingMode'\nimport { AppContain } from './styles'\ntype State = {\n  settings: {\n    stroke: string,\n    strokeColor: string,\n    background: string,\n    showGrid: boolean,\n    sections: number,\n    strokeWeight:number\n  },\n  drawingMode: string,\n  showDrawingMode: boolean,\n  data: []|ImageData[]\n}\nclass App extends Component<{}, State> {\n  state: State = {\n    settings: {\n      stroke: 'Near Point',\n      strokeColor: '#000000',\n      background: '#ffffff',\n      showGrid: true,\n      sections: 10,\n      strokeWeight: 1\n    },\n    data:[],\n    drawingMode: 'Rotation',\n    showDrawingMode: false\n  }\n\n  handleSettings = (option: string | any, value: string) => {\n    const { settings } = this.state;\n    this.setState({\n      settings: {\n        ...settings,\n        [option]: value\n      }\n    });\n  }\n\n  handleDrawingMode = (drawingMode: string) => {\n    this.setState({\n      drawingMode,\n      showDrawingMode: false\n    })\n    this.clearData()\n  }\n\n  displayDrawingMode = () => {\n    const { showDrawingMode } = this.state;\n    this.setState({\n      showDrawingMode: !showDrawingMode\n    })\n  }\n\n  updateData = (imgData: ImageData) => {\n    const { data } = this.state;\n    this.setState({\n      data:[...data,imgData]\n    })\n  }\n\n  reCalData = (drawState:number) => {    \n    const { data } = this.state;\n    const len = data.length - 1\n    const newData = data.slice(0,len - drawState )\n    this.setState({\n      data:[...newData,data[data.length-1] ]\n    })\n  }\n\n  clearData = () =>{\n    this.setState({\n      data:[]\n    })\n  }\n\n  render() {\n    const { settings, drawingMode, showDrawingMode, data } = this.state;\n    const { stroke, strokeColor, background, showGrid, sections, strokeWeight } = settings;\n    const grid: JSX.Element | [] = showGrid ? <GridHelper mode={drawingMode} sections={sections} /> : [];\n    return (\n      <AppProvider\n        value={{\n          // states\n          settings: settings,\n          data: data,\n          showDrawingMode:showDrawingMode,\n          // methods\n          handleSettings: this.handleSettings,\n          displayDrawingMode: this.displayDrawingMode\n        }}>\n        <Navbar />\n        <DrawingMode handleDrawingMode={this.handleDrawingMode} show={showDrawingMode} />\n        <AppContain>\n          <Background color={background} />\n          {grid}\n          <CanvasRenderer mode={drawingMode} stroke={stroke} strokeColor={strokeColor} sections={sections} updateData={this.updateData} strokeWeight={strokeWeight} />\n          <Settings data={data} settings={settings} reCalData={this.reCalData} clearData={this.clearData} mode={drawingMode}  />\n        </AppContain>\n      </AppProvider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}